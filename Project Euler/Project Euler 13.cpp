/* Written By Manav Aggarwal */
#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
#define ll long long
int main()
{	
	//freopen("t.out", "w", stdout);
	ios_base::sync_with_stdio(false); cin.tie(0);
	string arr[100] = {"00037107287533902102798797998220837590246510135740250", "00046376937677490009712648124896970078050417018260538", "00074324986199524741059474233309513058123726617309629", "00091942213363574161572522430563301811072406154908250", "00023067588207539346171171980310421047513778063246676", "00089261670696623633820136378418383684178734361726757", "00028112879812849979408065481931592621691275889832738", "00044274228917432520321923589422876796487670272189318", "00047451445736001306439091167216856844588711603153276", "00070386486105843025439939619828917593665686757934951", "00062176457141856560629502157223196586755079324193331", "00064906352462741904929101432445813822663347944758178", "00092575867718337217661963751590579239728245598838407", "00058203565325359399008402633568948830189458628227828", "00080181199384826282014278194139940567587151170094390", "00035398664372827112653829987240784473053190104293586", "00086515506006295864861532075273371959191420517255829", "00071693888707715466499115593487603532921714970056938", "00054370070576826684624621495650076471787294438377604", "00053282654108756828443191190634694037855217779295145", "00036123272525000296071075082563815656710885258350721", "00045876576172410976447339110607218265236877223636045", "00017423706905851860660448207621209813287860733969412", "00081142660418086830619328460811191061556940512689692", "00051934325451728388641918047049293215058642563049483", "00062467221648435076201727918039944693004732956340691", "00015732444386908125794514089057706229429197107928209", "00055037687525678773091862540744969844508330393682126", "00018336384825330154686196124348767681297534375946515", "00080386287592878490201521685554828717201219257766954", "00078182833757993103614740356856449095527097864797581", "00016726320100436897842553539920931837441497806860984", "00048403098129077791799088218795327364475675590848030", "00087086987551392711854517078544161852424320693150332", "00059959406895756536782107074926966537676326235447210", "00069793950679652694742597709739166693763042633987085", "00041052684708299085211399427365734116182760315001271", "00065378607361501080857009149939512557028198746004375", "00035829035317434717326932123578154982629742552737307", "00094953759765105305946966067683156574377167401875275", "00088902802571733229619176668713819931811048770190271", "00025267680276078003013678680992525463401061632866526", "00036270218540497705585629946580636237993140746255962", "00024074486908231174977792365466257246923322810917141", "00091430288197103288597806669760892938638285025333403", "00034413065578016127815921815005561868836468420090470", "00023053081172816430487623791969842487255036638784583", "00011487696932154902810424020138335124462181441773470", "00063783299490636259666498587618221225225512486764533", "00067720186971698544312419572409913959008952310058822", "00095548255300263520781532296796249481641953868218774", "00076085327132285723110424803456124867697064507995236", "00037774242535411291684276865538926205024910326572967", "00023701913275725675285653248258265463092207058596522", "00029798860272258331913126375147341994889534765745501", "00018495701454879288984856827726077713721403798879715", "00038298203783031473527721580348144513491373226651381", "00034829543829199918180278916522431027392251122869539", "00040957953066405232632538044100059654939159879593635", "00029746152185502371307642255121183693803580388584903", "00041698116222072977186158236678424689157993532961922", "00062467957194401269043877107275048102390895523597457", "00023189706772547915061505504953922979530901129967519", "00086188088225875314529584099251203829009407770775672", "00011306739708304724483816533873502340845647058077308", "00082959174767140363198008187129011875491310547126581", "00097623331044818386269515456334926366572897563400500", "00042846280183517070527831839425882145521227251250327", "00055121603546981200581762165212827652751691296897789", "00032238195734329339946437501907836945765883352399886", "00075506164965184775180738168837861091527357929701337", "00062177842752192623401942399639168044983993173312731", "00032924185707147349566916674687634660915035914677504", "00099518671430235219628894890102423325116913619626622", "00073267460800591547471830798392868535206946944540724", "00076841822524674417161514036427982273348055556214818", "00097142617910342598647204516893989422179826088076852", "00087783646182799346313767754307809363333018982642090", "00010848802521674670883215120185883543223812876952786", "00071329612474782464538636993009049310363619763878039", "00062184073572399794223406235393808339651327408011116", "00066627891981488087797941876876144230030984490851411", "00060661826293682836764744779239180335110989069790714", "00085786944089552990653640447425576083659976645795096", "00066024396409905389607120198219976047599490197230297", "00064913982680032973156037120041377903785566085089252", "00016730939319872750275468906903707539413042652315011", "00094809377245048795150954100921645863754710598436791", "00078639167021187492431995700641917969777599028300699", "00015368713711936614952811305876380278410754449733078", "00040789923115535562561142322423255033685442488917353", "00044889911501440648020369068063960672322193204149535", "00041503128880339536053299340368006977710650566631954", "00081234880673210146739058568557934581403627822703280", "00082616570773948327592232845941706525094512325230608", "00022918802058777319719839450180888072429661980811197", "00077158542502016545090413245809786882778948721859617", "00072107838435069186155435662884062257473692284509516", "00020849603980134001723930671666823555245252804609722", "00053503534226472524250874054075591789781264330331690"};
	ll nums[100][53], ans[53];
	ll i, j, carry = 0;
	for(i = 0; i < 100; i++)
	{
		for(j = 0; j < 53; j++)
		{
			nums[i][j] = (ll)(arr[i][52 - j] - '0');
		}
	}
	for(i = 0; i < 53; i++)
	{
		ans[i] = nums[0][i];
	}
	for(i = 1; i < 100; i++)
	{
		carry = 0;
		for(j = 0; j < 53; j++)
		{
			ans[j] = ans[j] + nums[i][j] + carry;
			carry = 0;
			if(ans[j] > 9)
			{
				carry = ans[j]/10;
				ans[j] %= 10;
			}
		}
		
	}
	for(i = 52; i >= 0; i--)
	{
		cout << ans[i];
	}
	return 0;
}
